import{L as E,l as P,D as f,O as v,R as D,c as F,u as G}from"./stats.module.6802f85e.js";import{A as x,S as I,C as m,au as u,a6 as g,P as j,F as R}from"./vendor.f1de933b.js";import{e as k,g as z}from"./assets.d9fd3e26.js";import{c as A}from"./lightConfig.90905d0a.js";import{m as B}from"./makeCommonGUI.95201cda.js";const O=A,U=k.Sunset,W=z.CornellBox,e=new E;e.bounces=4;e.renderWhenOffFocus=!0;e.toneMapping=x;e.useTileRender=!1;e.envMapIntensity=2;e.enableDenoise=!0;e.enableTemporalDenoise=!0;e.enableSpatialDenoise=!0;document.body.appendChild(e.domElement);const s=document.querySelector("#container");function q(n){n?s.classList.contains("isLoading")||s.classList.add("isLoading"):s.classList.contains("isLoading")&&s.classList.remove("isLoading")}const d=!0,{initStats:H,initGUI:$,initCameraDebugInfo:J}=B();e.loadingCallback={onProgress:n=>console.log(n),onComplete:n=>{console.log(n),q(!1),K(),$(d,e)}};const i=H(d),h=J(d);let w=null,r=null;function K(){e.setDenoiseColorFactor(1),e.setDenoisePositionFactor(.3)}const o=new I;P(O,o);const M=new f({color:new m(1,1,1),roughness:.15,metalness:0,specularTint:0,sheen:0,sheenTint:0,clearcoat:0,subsurface:0,transmission:1,ior:1.45,anisotropic:0,extinction:new m(1,1,0)}),C=M.clone();C.extinction=new m(0,0,1);const N=new u(.2,128,64),p=new g(N,M);p.position.y=1.5;p.position.x=.3;o.add(p);const Q=new u(.25,128,64),l=new g(Q,C);l.position.y=.5;l.position.x=-.5;l.position.z=.5;o.add(l);const a=new j(45,window.innerWidth/window.innerHeight,.001,1e3),c=new v(a,e.domElement);c.screenSpacePanning=!0;function V(n){n.traverse(t=>{t.isMesh&&t.material&&t.material.isMeshStandardMaterial&&(t.material=new f().fromStandardMaterial(t.material))})}async function X(){{const y=new D().setDataType(R),T=await new Promise(b=>{y.load(U,b)});o.environment=T}const t=(await F(W)).scene;V(t),o.add(t),G(a,c,o),e.buildScene(o,a).then(()=>{S()})}function L(){if(e.domElement.parentElement){const n=e.domElement.parentElement.clientWidth,t=e.domElement.parentElement.clientHeight;e.setSize(n,t),a.aspect=n/t,a.updateProjectionMatrix()}}window.addEventListener("resize",L);L();function S(n){c.update(),a.focus=c.target.distanceTo(a.position),i&&i.begin(),e.render(o,a),i&&i.end(),h&&(r=e.getTotalSamples(),w!=r&&(h.innerText=`Samples: ${r}`,w=r)),requestAnimationFrame(S)}X();
